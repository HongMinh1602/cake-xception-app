import streamlit as st
import tensorflow as tf
from PIL import Image
import numpy as np

# Load m√¥ h√¨nh
model = tf.keras.models.load_model('model/xception_banh_model.keras')

# Danh s√°ch nh√£n (t√πy m√¥ h√¨nh b·∫°n hu·∫•n luy·ªán)
class_names = ['B√°nh b√¥ng lan', 'B√°nh su kem', 'B√°nh tart', 'B√°nh m√¨', 'B√°nh cupcake']

# H√†m x·ª≠ l√Ω ·∫£nh
def preprocess_image(img):
    img = img.resize((299, 299))  # K√≠ch th∆∞·ªõc c·ªßa Xception
    img = np.array(img) / 255.0
    return np.expand_dims(img, axis=0)

# Giao di·ªán
st.title("üç∞ ·ª®ng d·ª•ng nh·∫≠n di·ªán b√°nh ng·ªçt")
st.write("T·∫£i ·∫£nh l√™n v√† xem d·ª± ƒëo√°n c·ªßa m√¥ h√¨nh")

uploaded_file = st.file_uploader("Ch·ªçn ·∫£nh b√°nh", type=["jpg", "jpeg", "png"])
if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption="·∫¢nh b·∫°n ƒë√£ t·∫£i", use_column_width=True)

    processed = preprocess_image(image)
    prediction = model.predict(processed)
    predicted_class = class_names[np.argmax(prediction)]

    st.success(f"‚ú® M√¥ h√¨nh d·ª± ƒëo√°n: **{predicted_class}**")
